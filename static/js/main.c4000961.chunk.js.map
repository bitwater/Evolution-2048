{"version":3,"sources":["types/ActionType.ts","actions/index.ts","typechain/factories/Evolution__factory.ts","utils/math.ts","utils/etherClient.ts","components/WalletInfo.tsx","types/Direction.ts","types/Animations.ts","components/Header.tsx","components/BoardTile.tsx","config.ts","components/Overlay.tsx","components/Board.tsx","components/Info.tsx","App.tsx","functions/board.ts","functions/localStorage.ts","reducers/index.ts","index.tsx","store.ts"],"names":["ActionType","resetAction","size","type","RESET","value","_abi","inputs","stateMutability","anonymous","indexed","internalType","name","outputs","_bytecode","Evolution__factory","signer","overrides","address","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","randomInt","min","max","Math","floor","random","EtherClient","evolutionContractAddress","winProvider","provider","client","this","a","detectEthereumProvider","on","accounts","window","location","reload","ethers","providers","Web3Provider","Error","request","method","getSigner","getAddress","getBalance","balance","getNetwork","network","networkName","chainId","formatEther","EvolutionClient","connectProvider","setWaitConfirmations","connectSigner","evolution","_waitConfirmations","connect","num","undefined","Promise","reject","resolve","id","config","estimateGas","mint","gas","gasLimit","mul","div","transaction","wait","receipt","ownerOf","totalSupply","BigNumber","from","etherClient","doGetWalletInfo","loadProvider","getWalletInfo","WalletInfo","Direction","AnimationType","useState","walletInfo","setWalletInfo","info","console","log","useEffect","then","catch","finally","onClick","substr","Header","dispatch","useDispatch","reset","useCallback","score","useSelector","state","scoreIncrease","moveId","best","className","key","tileTranslate","axis","findAnimation","animations","find","animation","BoardTile","moveAnimation","useMemo","MOVE","newAnimation","NEW","mergeAnimation","MERGE","style","transition","animationDuration","direction","UP","transform","DOWN","LEFT","RIGHT","log2","valueTranslate","clsx","Overlay","dismiss","DISMISS","defeat","connectEvolutionContract","error","newMint","victory","victoryDismissed","Board","board","boardSize","startPointerLocation","useRef","currentPointerLocation","onMove","moveAction","renderedBoard","setRenderedBoard","renderedAnimations","setRenderedAnimations","lastBoard","animationTimeout","keydownListener","e","preventDefault","addEventListener","removeEventListener","finishPointer","b","sqrt","y","x","angle","atan2","PI","onTouchStart","touch","touches","point","pageX","pageY","current","onTouchMove","onTouchEnd","onMouseStart","onMouseEnd","moveAnimations","filter","otherAnimations","length","clearTimeout","setTimeout","onMouseDown","onMouseUp","onMouseLeave","map","i","index","Info","target","rel","href","App","containsEmpty","newTile","initializeBoard","Array","fill","result","push","getRotatedIndex","temp","rotateBoard","undo","newBoard","updateBoard","changed","lastMergedIndex","col","row","initialIndex","below","merged","finalIndex","rotateAnimations","movePossible","setStoredData","model","localStorage","setItem","JSON","stringify","storedData","getItem","data","parse","hasOwnProperty","isArray","removeItem","getStoredData","initialState","update","Date","getTime","toString","initializeState","applicationState","action","newState","previousBoard","UNDO","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4000961.chunk.js","sourcesContent":["export enum ActionType {\n  RESET = 'reset',\n  MOVE = 'move',\n  UNDO = 'undo',\n  DISMISS = 'dismiss',\n}\n","import { ActionModel } from '../types/Models';\nimport { ActionType } from '../types/ActionType';\nimport { Direction } from '../types/Direction';\n\nexport function resetAction(size = 4): ActionModel {\n  return {\n    type: ActionType.RESET,\n    value: size,\n  };\n}\n\nexport function undoAction(): ActionModel {\n  return {\n    type: ActionType.UNDO,\n  };\n}\n\nexport function moveAction(direction: Direction): ActionModel {\n  return {\n    type: ActionType.MOVE,\n    value: direction,\n  };\n}\n\nexport function dismissAction(): ActionModel {\n  return {\n    type: ActionType.DISMISS,\n  };\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Evolution, EvolutionInterface } from \"../Evolution\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintForOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\nexport class Evolution__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Evolution> {\n    return super.deploy(overrides || {}) as Promise<Evolution>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Evolution {\n    return super.attach(address) as Evolution;\n  }\n  connect(signer: Signer): Evolution__factory {\n    return super.connect(signer) as Evolution__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): EvolutionInterface {\n    return new utils.Interface(_abi) as EvolutionInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Evolution {\n    return new Contract(address, _abi, signerOrProvider) as Evolution;\n  }\n}\n","export function randomInt(min: number, max: number){\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { Evolution__factory } from \"../typechain/factories/Evolution__factory\";\nimport { ethers, Signer, BigNumber, PayableOverrides } from \"ethers\";\nimport type { Web3Provider, Provider } from \"@ethersproject/providers\";\nimport { randomInt } from \"./math\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nconst EVOLUTION_CONTRACT_ADDRESS = \"0x49e0e90064256a92AfCA34c513925ef3a14026C7\";\n// const provider = new ethers.providers.JsonRpcProvider(RPC_HOST)\n\nexport interface IWalletInfo {\n  address: string;\n  networkName: string;\n  chainId: number;\n  balance: string;\n}\n// rinkeby id\nexport const contractChainId = 4;\nexport const contractChainName = \"rinkeby\";\n\nclass EtherClient {\n  evolutionContractAddress: string;\n  winProvider?: any;\n  provider?: Web3Provider;\n  client?: EvolutionClient;\n  //   readonly onAccountsDidChange = new Emitter<string[]>();\n  //   onAccountsChange = this.onAccountsDidChange.event;\n\n  constructor(evolutionContractAddress: string) {\n    this.evolutionContractAddress = evolutionContractAddress;\n  }\n\n  async loadProvider() {\n    if (this.provider) {\n      return;\n    }\n    this.winProvider = await detectEthereumProvider();\n    if (this.winProvider) {\n      // change event bind\n      this.winProvider.on(\"accountsChanged\", (accounts: string[]) => {\n        // this.onAccountsDidChange.fire(accounts);\n      });\n      this.winProvider.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      this.provider = new ethers.providers.Web3Provider(this.winProvider);\n      return;\n    }\n    throw new Error(\"there are no eth provider.\");\n  }\n\n  async getWalletInfo(): Promise<IWalletInfo | undefined> {\n    if (this.provider) {\n      await this.winProvider.request({ method: \"eth_requestAccounts\" });\n      const address = await this.provider.getSigner().getAddress();\n      const balance = await this.provider.getBalance(address);\n      const network = await this.provider.getNetwork();\n      return {\n        address,\n        networkName: network.name,\n        chainId: network.chainId,\n        balance: ethers.utils.formatEther(balance),\n      };\n    }\n    throw new Error(\"get wallet info failed\");\n  }\n\n  connectEvolutionContract() {\n    if (this.provider) {\n      this.client = new EvolutionClient();\n      this.client.connectProvider(this.evolutionContractAddress, this.provider);\n      this.client.setWaitConfirmations(1);\n    }\n  }\n\n  connectSigner() {\n    if (this.client && this.provider) {\n      this.client.setWaitConfirmations(1);\n      const signer = this.provider.getSigner();\n      this.client.connectSigner(signer);\n    }\n  }\n\n  resetClientConfirmations() {\n    if (this.client) {\n      this.client.setWaitConfirmations(1); // set number of confirmations to wait default is 5 blocks\n    }\n  }\n}\n\nclass EvolutionClient {\n  private evolution: any | undefined;\n  private provider: Provider | undefined;\n  private signer: Signer | undefined;\n  private _waitConfirmations = 5;\n\n  constructor() {\n    this._waitConfirmations = 5;\n  }\n\n  public connectProvider(address: string, provider: Provider): EvolutionClient {\n    this.provider = provider;\n    this.evolution = Evolution__factory.connect(address, this.provider);\n    return this;\n  }\n\n  public connectSigner(signer: Signer): EvolutionClient {\n    this.signer = signer;\n    return this;\n  }\n\n  public setWaitConfirmations(num: number): void {\n    this._waitConfirmations = num;\n  }\n\n  public contract(): Promise<any> {\n    if (this.provider === undefined || this.evolution === undefined) {\n      return Promise.reject(\"need to connect a valid provider\");\n    }\n    return Promise.resolve(this.evolution);\n  }\n\n  public async mint(\n    id: BigNumber,\n    config: PayableOverrides = {}\n  ): Promise<any> {\n    if (\n      this.provider === undefined ||\n      this.evolution === undefined ||\n      this.signer === undefined\n    ) {\n      return Promise.reject(\"need to connect a valid provider and signer\");\n    }\n    const gas = await this.evolution\n      .connect(this.signer)\n      .estimateGas.mint(id, { ...config });\n    const transaction = await this.evolution\n      .connect(this.signer)\n      .mint(id, { gasLimit: gas.mul(13).div(10), ...config });\n    const receipt = await transaction.wait(this._waitConfirmations);\n    return receipt;\n  }\n\n  public async ownerOf(id: BigNumber, config: PayableOverrides = {}) {\n    if (this.provider === undefined || this.evolution === undefined) {\n      return Promise.reject(\"need to connect a valid provider\");\n    }\n    return this.evolution.ownerOf(id, { ...config });\n  }\n\n  public async totalSupply(config: PayableOverrides = {}) {\n    if (this.provider === undefined || this.evolution === undefined) {\n      return Promise.reject(\"need to connect a valid provider\");\n    }\n    return this.evolution.totalSupply({ ...config });\n  }\n\n  public async newMint(config: PayableOverrides = {}) {\n    if (this.provider === undefined || this.evolution === undefined) {\n      return Promise.reject(\"need to connect a valid provider\");\n    }\n    let id = randomInt(0, 9800);\n    // console.log(\"newMint:\", id);\n    return this.mint(BigNumber.from(id), config);\n  }\n}\n\nexport const etherClient = new EtherClient(EVOLUTION_CONTRACT_ADDRESS);\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { etherClient, IWalletInfo } from '../utils/etherClient';\nimport { contractChainId, contractChainName } from '../utils/etherClient';\n\nconst WalletInfo: React.FC = () => {\n  const [walletInfo, setWalletInfo] = useState<IWalletInfo | null>(null);\n  // const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const doSetWalletInfo = () => {\n      doGetWalletInfo()\n        .then((info) => {\n          if (info) setWalletInfo(info);\n        })\n        .catch(() => {\n          /** ignore */\n        })\n        .finally(() => {\n          // setLoaded(true);\n        });\n    };\n    doSetWalletInfo();\n  }, [walletInfo]);\n\n  async function connectWallet() {\n    let info = await doGetWalletInfo();\n    console.log('getWalletInfo:', info);\n  }\n\n  return (\n    <button onClick={connectWallet}>\n      { !walletInfo && <div>Connect Wallet</div>}\n      {walletInfo && walletInfo.chainId !== contractChainId && (\n            <div>please switch chain to {contractChainName}</div>\n      )}\n      {walletInfo && walletInfo.chainId === contractChainId && (\n            <div>\n              <div>\n                {walletInfo.address.substr(0, 6)}...{walletInfo.address.substr(-4)}\n              </div>\n            </div>\n      )}\n    </button>\n  );\n};\n\nexport async function doGetWalletInfo() {\n  await etherClient.loadProvider();\n  return await etherClient.getWalletInfo();\n}\n\nexport default WalletInfo;\n","export enum Direction {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n}\n","import { Direction } from './Direction';\n\nexport enum AnimationType {\n  NEW,\n  MERGE,\n  MOVE,\n}\n\nexport interface AnimationModel {\n  type: AnimationType;\n  index: number;\n}\n\nexport interface AnimationNew extends AnimationModel {\n  type: AnimationType.NEW;\n  index: number;\n}\n\nexport interface AnimationMerge extends AnimationModel {\n  type: AnimationType.MERGE;\n  index: number;\n}\n\nexport interface AnimationMove extends AnimationModel {\n  type: AnimationType.MOVE;\n  index: number;\n  direction: Direction;\n  value: number;\n}\n\nexport type Animation = AnimationNew | AnimationMerge | AnimationMove;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetAction } from '../actions';\nimport { StateType } from '../reducers';\nimport WalletInfo from './WalletInfo';\n\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const reset = useCallback(() => dispatch(resetAction()), [dispatch]);\n  // const undo = useCallback(() => dispatch(undoAction()), [dispatch]);\n\n  const score = useSelector((state: StateType) => state.score);\n  const scoreIncrease = useSelector((state: StateType) => state.scoreIncrease);\n  const moveId = useSelector((state: StateType) => state.moveId);\n  const best = useSelector((state: StateType) => state.best);\n  // const previousBoard = useSelector((state: StateType) => state.previousBoard);\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-row\">\n          <div></div>\n        <div className=\"header-buttons\">\n          <WalletInfo />\n        </div>\n      </div>\n      <div className=\"header-row\">\n        <h2>Evolution 2048</h2>\n        <div className=\"header-scores\">\n          <div className=\"header-scores-score\">\n            <div>Score</div>\n            <div>{score}</div>\n            {!!scoreIncrease && (\n              <div className=\"header-scores-score-increase\" key={moveId}>\n                +{scoreIncrease}\n              </div>\n            )}\n          </div>\n          <div className=\"header-scores-score\">\n            <div>Best</div>\n            <div>{best}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"header-row\">\n        <div>\n          Join the tiles and experience the journey of evolution\n        </div>\n        <div className=\"header-buttons\">\n          <button onClick={reset}>New Game</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { CSSProperties, useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  Animation,\n  AnimationMerge,\n  AnimationMove,\n  AnimationNew,\n  AnimationType,\n} from '../types/Animations';\nimport { Direction } from '../types/Direction';\nimport { animationDuration, gridGap } from '../config';\n\nexport interface BoardTileProps {\n  value: number;\n  animations?: Animation[];\n}\n\nfunction tileTranslate(axis: 'X' | 'Y', value: number) {\n  return `translate${axis}(calc(${value} * (${gridGap} + 100%))`;\n}\n\nfunction findAnimation<T extends Animation>(\n  animations: Animation[] | undefined,\n  type: AnimationType\n): T {\n  return animations?.find(animation => animation.type === type) as T;\n}\n\nfunction valueTranslate(value: number) {\n  // const names = [\"2\", \"4\", \"8\", \"16\", \"32\", \"64\", \"128\", \"256\", \"512\", \"1024\", \"2048\", \"4096\", \"8192\"];\n  const index = Math.log2(value);\n  // 科学 - 9 工业 - 10(难度可达调整) 互联网 - 11 -2048 元宇宙 - 13 - 8192\n  const names_zh = [\"比特\", \"原子\", \"分子\", \"基因\", \"细胞\", \"物种\", \"语言\", \"文明\", \"科学\", \"工业\", \"互联网\", \"区块链\", \"元宇宙\", \"宏量子\", \"比特\", \"原子\"];\n  return names_zh[index];\n}\n\nconst BoardTile: React.FC<BoardTileProps> = ({ value, animations }) => {\n  const moveAnimation = useMemo(\n    () => findAnimation<AnimationMove>(animations, AnimationType.MOVE),\n    [animations]\n  );\n  const newAnimation = useMemo(\n    () => findAnimation<AnimationNew>(animations, AnimationType.NEW),\n    [animations]\n  );\n  const mergeAnimation = useMemo(\n    () => findAnimation<AnimationMerge>(animations, AnimationType.MERGE),\n    [animations]\n  );\n\n  const style = useMemo(() => {\n    if (!moveAnimation) {\n      return {};\n    }\n\n    const value: CSSProperties = {\n      transition: animationDuration + 'ms ease-in-out all',\n    };\n\n    switch (moveAnimation.direction) {\n      case Direction.UP:\n        value.transform = tileTranslate('Y', -1 * moveAnimation.value);\n        break;\n      case Direction.DOWN:\n        value.transform = tileTranslate('Y', moveAnimation.value);\n        break;\n      case Direction.LEFT:\n        value.transform = tileTranslate('X', -1 * moveAnimation.value);\n        break;\n      case Direction.RIGHT:\n        value.transform = tileTranslate('X', moveAnimation.value);\n        break;\n    }\n\n    return value;\n  }, [moveAnimation]);\n\n  const name = valueTranslate(value)\n\n  return (\n    <div className=\"board-tile\">\n      {value !== 0 && (\n        <div\n          className={clsx('board-tile-value', 'board-tile-' + value, {\n            'board-tile-new': !!newAnimation,\n            'board-tile-merge': !!mergeAnimation,\n          })}\n          style={style}\n        >\n          {name}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BoardTile;\n","/** Tile animation duration (in ms). */\nexport const animationDuration = 180;\n\n/** Default board size. */\nexport const defaultBoardSize = 4;\n\n/** A list of supported board sizes. */\nexport const supportedBoardSizes = [3, 4, 5, 6];\n\n/** Tile value of the victorious tile. */\nexport const victoryTileValue = 8192;\n\n/** Grid gap (used for animations). */\nexport const gridGap = '1rem';\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dismissAction, resetAction } from '../actions';\nimport { StateType } from '../reducers';\nimport { etherClient } from '../utils/etherClient';\nimport { doGetWalletInfo } from './WalletInfo';\n\nconst Overlay: React.FC = () => {\n  const dispatch = useDispatch();\n  const reset = useCallback(() => dispatch(resetAction()), [dispatch]);\n  const dismiss = useCallback(() => dispatch(dismissAction()), [dispatch]);\n\n  const defeat = useSelector((state: StateType) => state.defeat);\n  const victory = useSelector(\n    (state: StateType) => state.victory && !state.victoryDismissed\n  );\n\n  async function mint() {\n    let info = await doGetWalletInfo();\n    console.log('getWalletInfo:', info);\n    etherClient.connectEvolutionContract();\n    etherClient.connectSigner();\n    if (!etherClient.client) {\n      console.error('上传失败', `钱包异常`);\n      throw new Error(`钱包异常`);\n    }\n    try {\n      // await etherClient.client.ownerOf(BigNumber.from(1001));\n      const receipt =  await etherClient.client.newMint();\n      console.log('receipt:', receipt)\n    } catch (error) {\n      console.error(error)\n    } \n    \n    reset();\n  }\n\n  if (victory) {\n    return (\n      <div className=\"overlay overlay-victory\">\n        <h1>You win!</h1>\n        <div className=\"overlay-buttons\">\n          <button onClick={mint}>Mint puzzle</button>\n          <button onClick={dismiss}>Keep going</button>\n        </div>\n      </div>\n    );\n  }\n\n  if (defeat) {\n    return (\n      <div className=\"overlay overlay-defeat\">\n        <h1>Game over!</h1>\n        <div className=\"overlay-buttons\">\n          <button onClick={mint}>Mint puzzle</button>\n          <button onClick={reset}>Try again</button>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default Overlay;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { StateType } from '../reducers';\nimport { Direction } from '../types/Direction';\nimport { Point } from '../types/Models';\nimport { BoardType } from '../functions/board';\nimport { Animation, AnimationType } from '../types/Animations';\nimport { animationDuration } from '../config';\nimport { moveAction } from '../actions';\nimport BoardTile from './BoardTile';\nimport Overlay from './Overlay';\n\nconst Board: React.FC = () => {\n  const dispatch = useDispatch();\n  const board = useSelector((state: StateType) => state.board);\n  const boardSize = useSelector((state: StateType) => state.boardSize);\n  const animations = useSelector((state: StateType) => state.animations);\n  const startPointerLocation = useRef<Point>();\n  const currentPointerLocation = useRef<Point>();\n\n  const onMove = useCallback(\n    (direction: Direction) => dispatch(moveAction(direction)),\n    [dispatch]\n  );\n\n  const [renderedBoard, setRenderedBoard] = useState(board);\n  const [renderedAnimations, setRenderedAnimations] = useState<Animation[]>([]);\n  const lastBoard = useRef<BoardType>([...board]);\n  const animationTimeout = useRef<any>();\n\n  useEffect(() => {\n    const keydownListener = (e: KeyboardEvent) => {\n      e.preventDefault();\n\n      switch (e.key) {\n        case 'ArrowDown':\n          onMove(Direction.DOWN);\n          break;\n        case 'ArrowUp':\n          onMove(Direction.UP);\n          break;\n        case 'ArrowLeft':\n          onMove(Direction.LEFT);\n          break;\n        case 'ArrowRight':\n          onMove(Direction.RIGHT);\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', keydownListener);\n\n    return () => {\n      window.removeEventListener('keydown', keydownListener);\n    };\n  }, [onMove]);\n\n  const finishPointer = useCallback(\n    (a: Point, b: Point) => {\n      const distance = Math.sqrt((b.y - a.y) ** 2 + (b.x - a.x) ** 2);\n      if (distance < 20) {\n        return;\n      }\n\n      const angle = (Math.atan2(b.y - a.y, b.x - a.x) * 180) / Math.PI;\n      if (angle < -135 || angle > 135) {\n        onMove(Direction.LEFT);\n      } else if (angle < -45) {\n        onMove(Direction.UP);\n      } else if (angle < 45) {\n        onMove(Direction.RIGHT);\n      } else if (angle < 135) {\n        onMove(Direction.DOWN);\n      }\n    },\n    [onMove]\n  );\n\n  const onTouchStart = useCallback((e: React.TouchEvent) => {\n    e.preventDefault();\n    const touch = e.touches[0];\n    if (touch) {\n      const point: Point = { x: touch.pageX, y: touch.pageY };\n      startPointerLocation.current = point;\n    }\n  }, []);\n  const onTouchMove = useCallback((e: React.TouchEvent) => {\n    e.preventDefault();\n    const touch = e.touches[0];\n    if (touch) {\n      const point: Point = { x: touch.pageX, y: touch.pageY };\n      currentPointerLocation.current = point;\n    }\n  }, []);\n  const onTouchEnd = useCallback(\n    (e: React.TouchEvent) => {\n      e.preventDefault();\n      if (startPointerLocation.current && currentPointerLocation.current) {\n        finishPointer(\n          startPointerLocation.current,\n          currentPointerLocation.current\n        );\n      }\n\n      startPointerLocation.current = undefined;\n      currentPointerLocation.current = undefined;\n    },\n    [finishPointer]\n  );\n\n  const onMouseStart = useCallback((e: React.MouseEvent) => {\n    const point: Point = { x: e.pageX, y: e.pageY };\n    startPointerLocation.current = point;\n  }, []);\n  const onMouseEnd = useCallback(\n    (e: React.MouseEvent) => {\n      if (startPointerLocation.current) {\n        finishPointer(startPointerLocation.current, { x: e.pageX, y: e.pageY });\n        startPointerLocation.current = undefined;\n      }\n    },\n    [finishPointer]\n  );\n\n  useEffect(() => {\n    if (!animations) {\n      setRenderedBoard([...board]);\n      return;\n    }\n\n    const moveAnimations = animations.filter(\n      animation => animation.type === AnimationType.MOVE\n    );\n    const otherAnimations = animations.filter(\n      animation => animation.type !== AnimationType.MOVE\n    );\n\n    if (moveAnimations.length > 0) {\n      setRenderedBoard(lastBoard.current);\n      setRenderedAnimations(moveAnimations);\n\n      clearTimeout(animationTimeout.current);\n      animationTimeout.current = setTimeout(() => {\n        setRenderedAnimations(otherAnimations);\n        setRenderedBoard([...board]);\n      }, animationDuration);\n    } else {\n      setRenderedAnimations(otherAnimations);\n      setRenderedBoard([...board]);\n    }\n\n    lastBoard.current = [...board];\n  }, [animations, board, setRenderedBoard, setRenderedAnimations]);\n\n  return (\n    <div\n      className={`board board-${boardSize}`}\n      style={{ '--board-size': boardSize } as any}\n      onMouseDown={onMouseStart}\n      onMouseUp={onMouseEnd}\n      onMouseLeave={onMouseEnd}\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n    >\n      {renderedBoard.map((value, i) => (\n        <BoardTile\n          value={value}\n          key={i}\n          animations={renderedAnimations?.filter(\n            animation => animation.index === i\n          )}\n        />\n      ))}\n      <Overlay />\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\n\nconst Info: React.FC = () => {\n  return (\n    <div className=\"info\">\n      <h2>About</h2>\n      <p>\n        This is a <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/gabrielecirulli/2048\">2048</a> like game, you can mint an Evolution Puzzle NFT when the game is over.\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://testnets.opensea.io/collection/simevolution\"> Browse in OpenSea </a>\n      </p>\n      <p>\n        SimEvolution is a NFT game based on blockchain, which randomly generates data from things at all levels and creates an Evolution Puzzle NFT with scales from atoms to metaverse and time from antiquity to modern times, forming a panoramic view of simulation evolution.\n      </p>\n      <p>\n        At present, it is an interest-oriented experimental project, build with React, TypeScript and Solidity, combined with Ethereum and ERC721, developed by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/bitwater\">bitwater</a>.\n      </p>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from 'react';\nimport GithubCorner from 'react-github-corner';\nimport './App.scss';\n\nimport { animationDuration, gridGap } from './config';\nimport Header from './components/Header';\nimport Board from './components/Board';\nimport Info from './components/Info';\n// import BoardSizePicker from './components/BoardSizePicker';\n\nconst App: React.FC = () => {\n  return (\n    <div\n      className=\"app\"\n      style={\n        {\n          '--animation-duration': animationDuration + 'ms',\n          '--grid-gap': gridGap,\n        } as any\n      }\n    >\n      <GithubCorner target=\"_blank\" href=\"https://github.com/bitwater/SimEvolution\" />\n      <div className=\"page\">\n        <Header />\n        <Board />\n        <Info />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { Direction } from '../types/Direction';\nimport { Animation, AnimationType } from '../types/Animations';\n\nexport type BoardType = number[];\n\nexport function newTileValue() {\n  return Math.random() > 0.1 ? 2 : 4;\n}\n\nfunction containsEmpty(board: BoardType): boolean {\n  return board.find(value => value === 0) === 0;\n}\n\ninterface NewTileResult {\n  board: BoardType;\n  index?: number;\n}\n\nfunction newTile(board: BoardType): NewTileResult {\n  if (!containsEmpty(board)) {\n    return { board };\n  }\n\n  let index: number | undefined = undefined;\n\n  while (true) {\n    index = Math.floor(Math.random() * board.length);\n    if (board[index] === 0) {\n      board[index] = newTileValue();\n      break;\n    }\n  }\n\n  return {\n    board,\n    index,\n  };\n}\n\nexport interface BoardUpdate {\n  board: BoardType;\n  animations?: Animation[];\n  scoreIncrease: number;\n}\n\nexport function initializeBoard(boardSize: number): BoardUpdate {\n  const board = new Array(boardSize ** 2).fill(0);\n  const animations: Animation[] = [];\n\n  // Spawn two tiles at first.\n  let result = newTile(board);\n  if (result.index) {\n    animations.push({\n      type: AnimationType.NEW,\n      index: result.index,\n    });\n  }\n\n  result = newTile(board);\n  if (result.index) {\n    animations.push({\n      type: AnimationType.NEW,\n      index: result.index,\n    });\n  }\n\n  return { board, scoreIncrease: 0, animations };\n}\n\nfunction getRotatedIndex(\n  index: number,\n  boardSize: number,\n  direction: Direction\n): number {\n  let x = index % boardSize;\n  let y = Math.floor(index / boardSize);\n\n  switch (direction) {\n    case Direction.LEFT:\n      {\n        const temp = y;\n        y = boardSize - 1 - x;\n        x = temp;\n      }\n      break;\n    case Direction.RIGHT:\n      {\n        const temp = x;\n        x = boardSize - 1 - y;\n        y = temp;\n      }\n      break;\n    case Direction.UP:\n      x = boardSize - 1 - x;\n      y = boardSize - 1 - y;\n      break;\n  }\n\n  return y * boardSize + x;\n}\n\nfunction rotateBoard(\n  board: BoardType,\n  direction: Direction,\n  undo = false\n): BoardType {\n  // No need to rotate, it's already in the correct orientation.\n  if (direction === Direction.DOWN) {\n    return [...board];\n  }\n\n  const boardSize = Math.sqrt(board.length);\n  const newBoard = new Array(board.length);\n\n  if (undo) {\n    switch (direction) {\n      case Direction.LEFT:\n        direction = Direction.RIGHT;\n        break;\n      case Direction.RIGHT:\n        direction = Direction.LEFT;\n        break;\n    }\n  }\n\n  for (let i = 0; i < board.length; i++) {\n    const index = getRotatedIndex(i, boardSize, direction);\n    newBoard[index] = board[i];\n  }\n\n  return newBoard;\n}\n\nfunction rotateAnimations(\n  board: BoardType,\n  animations: Animation[],\n  direction: Direction\n): Animation[] {\n  // No need to rotate, it's already in the correct orientation.\n  if (direction === Direction.DOWN) {\n    return animations;\n  }\n\n  const boardSize = Math.sqrt(board.length);\n\n  switch (direction) {\n    case Direction.LEFT:\n      direction = Direction.RIGHT;\n      break;\n    case Direction.RIGHT:\n      direction = Direction.LEFT;\n      break;\n  }\n\n  for (let animation of animations) {\n    animation.index = getRotatedIndex(animation.index, boardSize, direction);\n  }\n\n  return animations;\n}\n\nexport function updateBoard(\n  board: BoardType,\n  direction: Direction\n): BoardUpdate {\n  const boardSize = Math.sqrt(board.length);\n\n  // First the board is rotated so gravity can work downwards.\n  board = rotateBoard(board, direction);\n\n  let changed = false;\n  let scoreIncrease = 0;\n  let animations: Animation[] = [];\n  let lastMergedIndex: number | undefined = undefined;\n\n  for (let col = 0; col < boardSize; col++) {\n    // Going from second last to the first row on the rotated board.\n    for (let row = boardSize - 2; row >= 0; row--) {\n      const initialIndex = row * boardSize + col;\n      if (board[initialIndex] === 0) {\n        continue;\n      }\n\n      let i = initialIndex;\n      let below = i + boardSize;\n      let merged = false;\n      let finalIndex: number | undefined = undefined;\n\n      while (board[below] === 0 || (!merged && board[i] === board[below])) {\n        if (below === lastMergedIndex) {\n          break;\n        }\n\n        changed = true;\n\n        if (board[below] !== 0) {\n          // Ensure non-greedy behavior, only allow first merge after fall.\n          merged = true;\n\n          scoreIncrease += board[i] * 2;\n        }\n\n        // Merge or update tile.\n        board[below] += board[i];\n        board[i] = 0;\n        i = below;\n        finalIndex = below;\n        below = i + boardSize;\n      }\n\n      if (finalIndex !== undefined) {\n        animations.push({\n          type: AnimationType.MOVE,\n          index: initialIndex,\n          direction,\n          value: Math.floor((finalIndex - initialIndex) / boardSize),\n        });\n\n        if (merged) {\n          lastMergedIndex = finalIndex;\n\n          animations.push({\n            type: AnimationType.MERGE,\n            index: finalIndex,\n          });\n        }\n      }\n    }\n  }\n\n  // Undo board rotation.\n  board = rotateBoard(board, direction, true);\n  animations = rotateAnimations(board, animations, direction);\n\n  // Generate a new tile on change.\n  if (changed) {\n    const result = newTile(board);\n    board = result.board;\n\n    if (result.index !== undefined) {\n      animations.push({\n        type: AnimationType.NEW,\n        index: result.index,\n      });\n    }\n  }\n\n  return { board, scoreIncrease, animations };\n}\n\nexport function movePossible(board: BoardType): boolean {\n  const boardSize = Math.sqrt(board.length);\n\n  if (containsEmpty(board)) {\n    return true;\n  }\n\n  // Check if a tile can be merged into a neighboring tile.\n  for (let i = 0; i < board.length; i++) {\n    if (\n      board[i] === board[i + boardSize] ||\n      board[i] === board[i - boardSize] ||\n      (i % boardSize !== 0 && board[i] === board[i - 1]) ||\n      (i % boardSize !== boardSize - 1 && board[i] === board[i + 1])\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { StorageModel } from '../types/Models';\n\nconst ITEM_NAME = '2048_data';\n\nexport function getStoredData(): StorageModel {\n  if (!localStorage.getItem(ITEM_NAME)) {\n    return {};\n  }\n\n  let model: StorageModel = {};\n\n  try {\n    const data = JSON.parse(localStorage.getItem(ITEM_NAME) as string);\n\n    if (\n      data.hasOwnProperty('board') &&\n      data.hasOwnProperty('boardSize') &&\n      data.hasOwnProperty('score') &&\n      data.hasOwnProperty('defeat') &&\n      data.hasOwnProperty('victoryDismissed')\n    ) {\n      if (\n        Array.isArray(data.board) &&\n        typeof data.boardSize === 'number' &&\n        data.board.length === data.boardSize ** 2 &&\n        typeof data.score === 'number' &&\n        typeof data.defeat === 'boolean' &&\n        typeof data.victoryDismissed === 'boolean'\n      ) {\n        for (let value of data.board) {\n          if (typeof value !== 'number') {\n            throw new Error('Invalid stored data.');\n          }\n\n          // Make sure the value is a power of 2.\n          if (value !== 0 && Math.log2(value) % 1 !== 0) {\n            throw new Error('Invalid stored data.');\n          }\n        }\n\n        model.board = data.board;\n        model.boardSize = data.boardSize;\n        model.score = data.score;\n        model.defeat = data.defeat;\n        model.victoryDismissed = data.victoryDismissed;\n      } else {\n        throw new Error('Invalid stored data.');\n      }\n    }\n\n    if (data.hasOwnProperty('best')) {\n      if (typeof data.best === 'number') {\n        model.best = data.best;\n      } else {\n        throw new Error('Invalid stored data.');\n      }\n    }\n  } catch {\n    localStorage.removeItem(ITEM_NAME);\n  }\n\n  return model;\n}\n\nexport function setStoredData(model: StorageModel) {\n  localStorage.setItem(\n    ITEM_NAME,\n    JSON.stringify({\n      best: model.best,\n      score: model.score,\n      board: model.board,\n      boardSize: model.boardSize,\n      defeat: model.defeat,\n      victoryDismissed: model.victoryDismissed,\n    })\n  );\n}\n","import { Store } from 'redux';\n\nimport { ActionType } from '../types/ActionType';\nimport { ActionModel } from '../types/Models';\nimport {\n  initializeBoard,\n  BoardType,\n  updateBoard,\n  movePossible,\n} from '../functions/board';\nimport { Direction } from '../types/Direction';\nimport { getStoredData, setStoredData } from '../functions/localStorage';\nimport { Animation } from '../types/Animations';\nimport { defaultBoardSize, victoryTileValue } from '../config';\n\nexport interface StateType {\n  /** Board size. Currently always 4. */\n  boardSize: number;\n\n  /** Current board. */\n  board: BoardType;\n\n  /** Previous board. */\n  previousBoard?: BoardType;\n\n  /** Was 2048 tile found? */\n  victory: boolean;\n\n  /** Is game over? */\n  defeat: boolean;\n\n  /** Should the victory screen be hidden? */\n  victoryDismissed: boolean;\n\n  /** Current score. */\n  score: number;\n\n  /** Score increase after last update. */\n  scoreIncrease?: number;\n\n  /** Best score. */\n  best: number;\n\n  /** Used for certain animations. Mainly as a value of the \"key\" property. */\n  moveId?: string;\n\n  /** Animations after last update. */\n  animations?: Animation[];\n}\n\nconst storedData = getStoredData();\n\nfunction initializeState(): StateType {\n  const update = initializeBoard(defaultBoardSize);\n\n  return {\n    boardSize: storedData.boardSize || defaultBoardSize,\n    board: storedData.board || update.board,\n    defeat: storedData.defeat || false,\n    victory: false,\n    victoryDismissed: storedData.victoryDismissed || false,\n    score: storedData.score || 0,\n    best: storedData.best || 0,\n    moveId: new Date().getTime().toString(),\n  };\n}\n\nlet initialState: StateType = initializeState();\n\nexport type StoreType = Store<StateType, ActionModel>;\n\nfunction applicationState(state = initialState, action: ActionModel) {\n  const newState = { ...state };\n\n  switch (action.type) {\n    case ActionType.RESET:\n      {\n        const size = action.value || newState.boardSize;\n        const update = initializeBoard(size);\n        newState.boardSize = size;\n        newState.board = update.board;\n        newState.score = 0;\n        newState.animations = update.animations;\n        newState.previousBoard = undefined;\n        newState.victory = false;\n        newState.victoryDismissed = false;\n      }\n      break;\n    case ActionType.MOVE:\n      {\n        if (newState.defeat) {\n          break;\n        }\n\n        const direction = action.value as Direction;\n        const update = updateBoard(newState.board, direction);\n        newState.previousBoard = [...newState.board];\n        newState.board = update.board;\n        newState.score += update.scoreIncrease;\n        newState.animations = update.animations;\n        newState.scoreIncrease = update.scoreIncrease;\n        newState.moveId = new Date().getTime().toString();\n      }\n      break;\n    case ActionType.UNDO:\n      if (!newState.previousBoard) {\n        break;\n      }\n\n      newState.board = newState.previousBoard;\n      newState.previousBoard = undefined;\n\n      if (newState.scoreIncrease) {\n        newState.score -= newState.scoreIncrease;\n      }\n      break;\n    case ActionType.DISMISS:\n      newState.victoryDismissed = true;\n      break;\n    default:\n      return state;\n  }\n\n  if (newState.score > newState.best) {\n    newState.best = newState.score;\n  }\n\n  newState.defeat = !movePossible(newState.board);\n  newState.victory = !!newState.board.find(value => value === victoryTileValue);\n  setStoredData(newState);\n\n  return newState;\n}\n\nexport default applicationState;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport createStore from './store';\n\nconst store = createStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { createStore } from 'redux';\n\nimport reducers, { StoreType } from './reducers';\n\nconst newStore = (): StoreType => createStore(reducers);\nexport default newStore;\n"],"sourceRoot":""}